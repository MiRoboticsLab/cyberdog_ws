type:
  xxx: &Xxx true

data:
  bringup_test:
    file_name: bringup_test.launch.py
    arguments:
      - {argument_int: 0, description: "int 键值对"}
      - {argument_float: 0.1, description: "float 键值对"}
      - {argument_bool: True, description: "bool 键值对"}
      - {argument_string: string, description: "string 键值对"}
    param:
      cmd: null
      name: null
      cwd: null
      env: null
      additional_env: null
      shell: null
      sigterm_timeout: null
      sigkill_timeout: null
      emulate_tty: null
      prefix: null
      output: screen
      output_format: null
      log_cmd: null
      on_exit: null
      respawn: true
      respawn_delay: 1
    events:
      handled:
        shutdown_process: null
        signal_process: null
        process_stdin: null
        shutdown: null
      emitted:
        process_started: null
        process_exited: null
        process_stdout: null
        process_stderr: null
    nodes: [bringup_test]

  #------------------------------------------------------------->
  base:
    file_name: base.launch.py
    nodes: [connector, cyberdog_audio, device_manager, sensor_manager, motion_manager, realsense2_camera, cyberdog_manager, odom_out_publisher, motor_bridge, cyberdog_grpc, bes_transmit, cyberdog_vp_engine, cyberdog_face, cyberdog_action, cyberdog_interactive, cyberdog_train, cyberdog_ai_sports]

  #------------------------------------------------------------->
  sim_base:
    file_name: sim_base.launch.py
    nodes: [connector, sim_device_manager, sim_sensor_manager, motion_manager, cyberdog_grpc, cyberdog_audio]

  #------------------------------------------------------------->
  navigation_bringup:
    package_name: navigation_bringup
    file_name: navigation.launch.py

  #------------------------------------------------------------->
  factory_base:
    file_name: factory_base.launch.py
    nodes: [factory_sensor_manager]

  #------------------------------------------------------------->
  cyberdog_sudo:
    file_name: cyberdog_sudo.launch.py
    nodes: [cyberdog_permission, cyberdog_wifi, cyberdog_ota, cyberdog_bluetooth, unlock_request, cyberdog_bluetooth_network]
